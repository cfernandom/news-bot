services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: preventia_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-preventia_news}
      - POSTGRES_USER=${POSTGRES_USER:-preventia}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-preventia123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/data/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-preventia}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Analytics API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: preventia_api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-preventia}:${POSTGRES_PASSWORD:-preventia123}@postgres:5432/${POSTGRES_DB:-preventia_news}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_RELOAD=false
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"

  # News Analytics Service (legacy/background processing)
  analytics_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: preventia_analytics
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-preventia}:${POSTGRES_PASSWORD:-preventia123}@postgres:5432/${POSTGRES_DB:-preventia_news}
      - DAYS_INTERVAL=${DAYS_INTERVAL:-3}
      - WEEKLY_DAY=${WEEKLY_DAY:-1}
      - WEEKLY_TIME=${WEEKLY_TIME:-06:00}
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy

  # Redis for caching (optional, but recommended for analytics)
  redis:
    image: redis:8-alpine
    container_name: preventia_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  redis_data:
