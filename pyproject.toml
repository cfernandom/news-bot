# PreventIA News Analytics - Python Project Configuration
# Centralized configuration for code quality tools

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "preventia-news-analytics"
version = "1.0.0"
description = "Intelligent media monitoring system specialized in automated analysis of breast cancer news"
authors = [
    {name = "Cristhian Fernando Moreno Manrique", email = "cfmorenom@ucompensar.edu.co"}
]
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic"
]

# Project dependencies - CORRECTED: Added main dependencies
dependencies = [
    "beautifulsoup4>=4.13.4",
    "httpx>=0.28.1",
    "openai>=1.76.0",
    "playwright>=1.51.0",
    "pydantic>=2.11.3",
    "python-dotenv>=1.1.0",
    "requests>=2.32.3",
    "tqdm>=4.67.1",
    "fastapi>=0.115.14",
    "uvicorn[standard]>=0.34.0",
    "sqlalchemy>=2.0.41",
    "alembic>=1.14.0",
    "asyncpg>=0.30.0",
    "redis>=5.2.1",
    "spacy>=3.8.7",
    "vaderSentiment>=3.3.2",
    "pandas>=2.2.3",
    "numpy>=2.2.1",
    "python-multipart>=0.0.17"
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0"
]
dev = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "flake8>=7.3.0",
    "bandit>=1.8.5",
    "pre-commit>=4.2.0"
]

# Black configuration - Code formatting
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration - Import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["venv/*", "build/*", "dist/*"]

# Pytest configuration - Testing framework - IMPROVED: Added coverage integration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "--tb=short",
    "-v",
    "--color=yes",
    "--cov=services",
    "--cov=scripts",
    "--cov-report=html",
    "--cov-report=term-missing"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "performance: Performance tests",
    "database: Database-related tests",
    "slow: Slow running tests"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

# Coverage configuration - Test coverage
[tool.coverage.run]
source = ["services", "scripts"]
omit = [
    "tests/*",
    "venv/*",
    "build/*",
    "dist/*",
    "*/__pycache__/*",
    "*/migrations/*"
]
branch = true

[tool.coverage.report]
fail_under = 85
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == '__main__':",  # CORRECTED: Fixed quotes
    "pass"
]

[tool.coverage.html]
directory = "htmlcov"

# Bandit configuration - Security scanning
[tool.bandit]
exclude_dirs = ["tests", "venv", "build", "dist"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

# MyPy configuration - Type checking (future)
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Gradually enable
disallow_incomplete_defs = false  # Gradually enable
check_untyped_defs = true
disallow_untyped_decorators = false  # Gradually enable
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
